apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ingest-and-train
spec:
  workspaces:
    - name: shared-workspace
  params:
    - name: GIT-URL
      type: string
      description: URL of the git repo for the code
      default: https://github.com/redhat-na-ssa/datasci-stock-pipeline.git
    - name: GIT-REVISION
      type: string
      description: Revision / Branch / Tag to be used from repo of the code
      default: main
    - name: CONTEXT-DIR
      type: string
      description: Directory where the code is located
      default: src
    - name: IMAGE_STREAM
      type: string
      description: Image stream to be built from the code
      default: ingest-and-train
    - name: AWS_S3_ACCESS_KEY_ID
      type: string
      description: minio access_key
      default: minioadmin
    - name: AWS_S3_SECRET_ACCESS_KEY
      type: string
      description: minio secret_key
      default: minioadmin
    - name: AWS_S3_ENDPOINT
      type: string
      description: minio endpoint
      default: http://minio:9000
  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: $(params.GIT-URL)
        - name: subdirectory
          value: $(params.CONTEXT-DIR)
        - name: deleteExisting
          value: "true"
        - name: revision
          value: $(params.GIT-REVISION)
    - name: ingest-train
      taskRef:
        name: ingest-train
      params:
        - name: IMAGE_STREAM
          value: image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/$(params.IMAGE_STREAM)
        - name: AWS_S3_ACCESS_KEY_ID
          value: $(params.AWS_S3_ACCESS_KEY_ID)
        - name: AWS_S3_SECRET_ACCESS_KEY
          value: $(params.AWS_S3_SECRET_ACCESS_KEY)
        - name: AWS_S3_ENDPOINT
          value: $(params.AWS_S3_ENDPOINT)
      workspaces:
      - name: source
        workspace: shared-workspace
      runAfter:
      - fetch-repository
